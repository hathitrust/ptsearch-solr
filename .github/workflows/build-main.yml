name: Docker Build

on:
  workflow_run:
    workflows: [ 'Run CI' ]
    branches: [ 'main' ]
    types: [ completed ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: 'ghcr.io/${{ github.repository }}-unstable:${{ github.sha }}, ghcr.io/${{ github.repository }}-unstable:latest'
          file: Dockerfile

  deploy-testing:
    needs: build
    runs-on: ubuntu-latest
    environment: testing
    steps:
    - name: Deploy to Testing
      uses: mlibrary/deploy-to-kubernetes@v1
      with:
        github_username: ${{ github.actor }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        image: ${{ github.repository }}-unstable:${{ github.sha }}
        cluster_ca: ${{ secrets.KUBERNETES_CA }}
        cluster_server: ${{ secrets.KUBERNETES_SERVER }}
        namespace_token: ${{ secrets.KUBERNETES_TOKEN }}
        namespace: ${{ secrets.NAMESPACE }}

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - name: Deploy to Staging
      uses: mlibrary/deploy-to-kubernetes@v1
      with:
        github_username: ${{ github.actor }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        image: ${{ github.repository }}-unstable:${{ github.sha }}
        cluster_ca: ${{ secrets.KUBERNETES_CA }}
        cluster_server: ${{ secrets.KUBERNETES_SERVER }}
        namespace_token: ${{ secrets.KUBERNETES_TOKEN }}
        namespace: ${{ secrets.NAMESPACE }}
